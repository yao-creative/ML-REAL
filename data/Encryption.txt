in cryptography, encryption is the process of encoding information. this process converts the original representation of the information, known as plaintext, into an alternative form known as ciphertext. ideally, only authorized parties can decipher a ciphertext back to plaintext and access the original information. encryption does not itself prevent interference but denies the intelligible content to a would-be interceptor. 
for technical reasons, an encryption scheme usually uses a pseudo-random encryption key generated by an algorithm. it is possible to decrypt the message without possessing the key but, for a well-designed encryption scheme, considerable computational resources and skills are required. an authorized recipient can easily decrypt the message with the key provided by the originator to recipients but not to unauthorized users. 
historically, various forms of encryption have been used to aid in cryptography. early encryption techniques were often used in military messaging. since then, new techniques have emerged and become commonplace in all areas of modern computing. modern encryption schemes use the concepts of public-key and symmetric-key. modern encryption techniques ensure security because modern computers are inefficient at cracking the encryption.


== history ==


=== ancient ===
one of the earliest forms of encryption is symbol replacement, which was first found in the tomb of khnumhotep ii, who lived in 1900 bc egypt. symbol replacement encryption is “non-standard,” which means that the symbols require a cipher or key to understand. this type of early encryption was used throughout ancient greece and rome for military purposes.  one of the most famous military encryption developments was the caesar cipher, which was a system in which a letter in normal text is shifted down a fixed number of positions down the alphabet to get the encoded letter. a message encoded with this type of encryption could be decoded with the fixed number on the caesar cipher.
around 800 ad, arab mathematician al-kindi developed the technique of frequency analysis – which was an attempt to systematically crack caesar ciphers. this technique looked at the frequency of letters in the encrypted message to determine the appropriate shift. this technique was rendered ineffective after the creation of the polyalphabetic cipher by leone alberti in 1465, which incorporated different sets of languages. in order for frequency analysis to be useful, the person trying to decrypt the message would need to know which language the sender chose.


=== 19th–20th century ===
around 1790, thomas jefferson theorised a cipher to encode and decode messages in order to provide a more secure way of military correspondence. the cipher, known today as the wheel cipher or the jefferson disk, although never actually built, was theorized as a spool that could jumble an english message up to 36 characters. the message could be decrypted by plugging in the jumbled message to a receiver with an identical cipher.
a similar device to the jefferson disk, the m-94, was developed in 1917 independently by us army major joseph mauborne. this device was used in u.s. military communications until 1942.in world war ii, the axis powers used a more advanced version of the m-94 called the enigma machine. the enigma machine was more complex because unlike the jefferson wheel and the m-94, each day the jumble of letters switched to a completely new combination. each day's combination was only known by the axis, so many thought the only way to break the code would be to try over 17,000 combinations within 24 hours. the allies used computing power to severely limit the number of reasonable combinations they needed to check every day, leading to the breaking of the enigma machine.


=== modern ===
today, encryption is used in the transfer of communication over the internet for security and commerce. as computing power continues to increase, computer encryption is constantly evolving to prevent attacks.


== encryption in cryptography ==
in the context of cryptography, encryption serves as a mechanism to ensure confidentiality. since data may be visible on the internet, sensitive information such as passwords and personal communication may be exposed to potential interceptors. the process of encrypting and decrypting messages involves keys. the two main types of keys in cryptographic systems are symmetric-key and public-key (also known as asymmetric-key).many complex cryptographic algorithms often use simple modular arithmetic in their implementations.


=== types ===
in symmetric-key schemes, the encryption and decryption keys are the same. communicating parties must have the same key in order to achieve secure communication. the german enigma machine utilized a new symmetric-key each day for encoding and decoding messages.
in public-key encryption schemes, the encryption key is published for anyone to use and encrypt messages. however, only the receiving party has access to the decryption key that enables messages to be read. public-key encryption was first described in a secret document in 1973; beforehand, all encryption schemes were symmetric-key (also called private-key).: 478  although published subsequently, the work of diffie and hellman was published in a journal with a large readership, and the value of the methodology was explicitly described. the method became known as the diffie-hellman key exchange.
rsa (rivest–shamir–adleman) is another notable public-key cryptosystem. created in 1978, it is still used today for applications involving digital signatures. using number theory, the rsa algorithm selects two prime numbers, which help generate both the encryption and decryption keys.a publicly available public-key encryption application called pretty good privacy (pgp) was written in 1991 by phil zimmermann, and distributed free of charge with source code. pgp was purchased by symantec in 2010 and is regularly updated.


== uses ==
encryption has long been used by militaries and governments to facilitate secret communication. it is now commonly used in protecting information within many kinds of civilian systems. for example, the computer security institute reported that in 2007, 71% of companies surveyed utilized encryption for some of their data in transit, and 53% utilized encryption for some of their data in storage. encryption can be used to protect data "at rest", such as information stored on computers and storage devices (e.g. usb flash drives). in recent years, there have been numerous reports of confidential data, such as customers' personal records, being exposed through loss or theft of laptops or backup drives; encrypting such files at rest helps protect them if physical security measures fail. digital rights management systems, which prevent unauthorized use or reproduction of copyrighted material and protect software against reverse engineering (see also copy protection), is another somewhat different example of using encryption on data at rest.encryption is also used to protect data in transit, for example data being transferred via networks (e.g. the internet, e-commerce), mobile telephones, wireless microphones, wireless intercom systems, bluetooth devices and bank automatic teller machines. there have been numerous reports of data in transit being intercepted in recent years. data should also be encrypted when transmitted across networks in order to protect against eavesdropping of network traffic by unauthorized users.


=== data erasure ===

conventional methods for permanently deleting data from a storage device involve overwriting the device's whole content with zeros, ones, or other patterns – a process which can take a significant amount of time, depending on the capacity and the type of storage medium. cryptography offers a way of making the erasure almost instantaneous. this method is called crypto-shredding. an example implementation of this method can be found on ios devices, where the cryptographic key is kept in a dedicated 'effaceable storage'. because the key is stored on the same device, this setup on its own does not offer full privacy or security protection if an unauthorized person gains physical access to the device.


== limitations ==
encryption is used in the 21st century to protect digital data and information systems. as computing power increased over the years, encryption technology has only become more advanced and secure. however, this advancement in technology has also exposed a potential limitation of today's encryption methods.
the length of the encryption key is an indicator of the strength of the encryption method. for example, the original encryption key, des (data encryption standard), was 56 bits, meaning it had 2^56 combination possibilities. with today's computing power, a 56-bit key is no longer secure, being vulnerable to hacking by brute force attack. today the standard of modern encryption keys is up to 2048 bit with the rsa system. decrypting a 2048 bit encryption key is nearly impossible in light of the number of possible combinations. however, quantum computing is threatening to change this secure nature.
quantum computing utilizes properties of quantum mechanics in order to process large amounts of data simultaneously. quantum computing has been found to achieve computing speeds thousands of times faster than today's supercomputers. this computing power presents a challenge to today's encryption technology. for example, rsa encryption utilizes the multiplication of very large prime numbers to create a semiprime number for its public key. decoding this key without its private key requires this semiprime number to be factored in, which can take a very long time to do with modern computers. it would take a supercomputer anywhere between weeks to months to factor in this key. however, quantum computing can use quantum algorithms to factor this semiprime number in the same amount of time it takes for normal computers to generate it. this would make all data protected by current public-key encryption vulnerable to quantum computing attacks. other encryption techniques like elliptic curve cryptography and symmetric key encryption are also vulnerable to quantum computing.while quantum computing could be a threat to encryption security in the future, quantum computing as it currently stands is still very limited. quantum computing currently is not commercially available, cannot handle large amounts of code, and only exists as computational devices, not computers. furthermore, quantum computing advancements will be able to be utilized in favor of encryption as well. the national security agency (nsa) is currently preparing post-quantum encryption standards for the future. quantum encryption promises a level of security that will be able to counter the threat of quantum computing.


== attacks and countermeasures ==
encryption is an important tool but is not sufficient alone to ensure the security or privacy of sensitive information throughout its lifetime. most applications of encryption protect information only at rest or in transit, leaving sensitive data in clear text and potentially vulnerable to improper disclosure during processing, such as by a cloud service for example. homomorphic encryption and secure multi-party computation are emerging techniques to compute on encrypted data; these techniques are general and turing complete but incur high computational and/or communication costs.
in response to encryption of data at rest, cyber-adversaries have developed new types of attacks. these more recent threats to encryption of data at rest include cryptographic attacks, stolen ciphertext attacks, attacks on encryption keys, insider attacks, data corruption or integrity attacks, data destruction attacks, and ransomware attacks. data fragmentation and active defense data protection technologies attempt to counter some of these attacks, by distributing, moving, or mutating ciphertext so it is more difficult to identify, steal, corrupt, or destroy.


=== integrity protection of ciphertexts ===
encryption, by itself, can protect the confidentiality of messages, but other techniques are still needed to protect the integrity and authenticity of a message; for example, verification of a message authentication code (mac) or a digital signature. authenticated encryption algorithms are designed to provide both encryption and integrity protection together. standards for cryptographic software and hardware to perform encryption are widely available, but successfully using encryption to ensure security may be a challenging problem. a single error in system design or execution can allow successful attacks. sometimes an adversary can obtain unencrypted information without directly undoing the encryption. see for example traffic analysis, tempest, or trojan horse.integrity protection mechanisms such as macs and digital signatures must be applied to the ciphertext when it is first created, typically on the same device used to compose the message, to protect a message end-to-end along its full transmission path; otherwise, any node between the sender and the encryption agent could potentially tamper with it. encrypting at the time of creation is only secure if the encryption device itself has correct keys and has not been tampered with. if an endpoint device has been configured to trust a root certificate that an attacker controls, for example, then the attacker can both inspect and tamper with encrypted data by performing a man-in-the-middle attack anywhere along the message's path. the common practice of tls interception by network operators represents a controlled and institutionally sanctioned form of such an attack, but countries have also attempted to employ such attacks as a form of control and censorship.


=== ciphertext length and padding ===

even when encryption correctly hides a message's content and it cannot be tampered with at rest or in transit, a message's length is a form of metadata that can still leak sensitive information about the message. for example, the well-known crime and breach attacks against https were side-channel attacks that relied on information leakage via the length of encrypted content. traffic analysis is a broad class of techniques that often employs message lengths to infer sensitive implementation about traffic flows by aggregating information about a large number of messages.
padding a message's payload before encrypting it can help obscure the cleartext's true length, at the cost of increasing the ciphertext's size and introducing or increasing bandwidth overhead. messages may be padded randomly or deterministically, with each approach having different tradeoffs. encrypting and padding messages to form padded uniform random blobs or purbs is a practice guaranteeing that the cipher text leaks no metadata about its cleartext's content, and leaks asymptotically minimal 
  
    
      
        o
        (
        log
        ⁡
        log
        ⁡
        m
        )
      
    
    {\displaystyle o(\log \log m)}
   information via its length.


== see also ==


== references ==


== further reading ==
fouché gaines, helen (1939), cryptanalysis: a study of ciphers and their solution, new york: dover publications inc, isbn 978-0486200972
kahn, david (1967), the codebreakers - the story of secret writing (isbn 0-684-83130-9)
preneel, bart (2000), "advances in cryptology - eurocrypt 2000", springer berlin heidelberg, isbn 978-3-540-67517-4
sinkov, abraham (1966): elementary cryptanalysis: a mathematical approach, mathematical association of america. isbn 0-88385-622-0
tenzer, theo (2021): super secreto – the third epoch of cryptography: multiple, exponential, quantum-secure and above all, simple and practical encryption for everyone, norderstedt, isbn 9783755761174.
yehuda, lindell; jonathan, katz (2014), introduction to modern cryptography, hall/crc, isbn 978-1466570269