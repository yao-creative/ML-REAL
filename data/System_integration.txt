system integration is defined in engineering as the process of bringing together the component sub-systems into one system (an aggregation of subsystems cooperating so that the system is able to deliver the overarching functionality) and ensuring that the subsystems function together as a system, and in information technology as the process of linking together different computing systems and software applications physically or functionally, to act as a coordinated whole.
the system integrator integrates discrete systems utilizing a variety of techniques such as computer networking, enterprise application integration, business process management or manual programming.system integration involves integrating existing, often disparate systems in such a way "that focuses on increasing value to the customer" (e.g., improved product quality and performance) while at the same time providing value to the company (e.g., reducing operational costs and improving response time). in the modern world connected by internet, the role of system integration engineers is important: more and more systems are designed to connect, both within the system under construction and to systems that are already deployed.


== methods of integration ==
vertical integration (as opposed to "horizontal integration") is the process of integrating subsystems according to their functionality by creating functional entities also referred to as silos. the benefit of this method is that the integration is performed quickly and involves only the necessary vendors, therefore, this method is cheaper in the short term. on the other hand, cost-of-ownership can be substantially higher than seen in other methods, since in case of new or enhanced functionality, the only possible way to implement (scale the system) would be by implementing another silo. reusing subsystems to create another functionality is not possible.star integration, also known as spaghetti integration, is a process of systems integration where each system is interconnected to each of the remaining subsystems. when observed from the perspective of the subsystem which is being integrated, the connections are reminiscent of a star, but when the overall diagram of the system is presented, the connections look like spaghetti, hence the name of this method. the cost varies because of the interfaces that subsystems are exporting. in a case where the subsystems are exporting heterogeneous or proprietary interfaces, the integration cost can substantially rise. time and costs needed to integrate the systems increase exponentially when adding additional subsystems. from the feature perspective, this method often seems preferable, due to the extreme flexibility of the reuse of functionality.horizontal integration or enterprise service bus (esb) is an integration method in which a specialized subsystem is dedicated to communication between other subsystems. this allows cutting the number of connections (interfaces) to only one per subsystem which will connect directly to the esb. the esb is capable of translating the interface into another interface. this allows cutting the costs of integration and provides extreme flexibility. with systems integrated using this method, it is possible to completely replace one subsystem with another subsystem which provides similar functionality but exports different interfaces, all this completely transparent for the rest of the subsystems. the only action required is to implement the new interface between the esb and the new subsystem.the horizontal scheme can be misleading, however, if it is thought that the cost of intermediate data transformation or the cost of shifting responsibility over business logic can be avoided.industrial lifecycle integration is a system integration process that considers four categories or stages of integration: initial system implementation, engineering and design, project services, and operations. this approach incorporates the requirements of each lifecycle stage of the industrial asset when integrating systems and subsystems. the key output is a standardized data architecture that can function throughout the life of the asset.
a common data format is an integration method to avoid every adapter having to convert data to/from every other applications' formats, enterprise application integration (eai) systems usually stipulate an application-independent (or common) data format. the eai system usually provides a data transformation service as well to help convert between application-specific and common formats. this is done in two steps: the adapter converts information from the application's format to the bus' common format. then, semantic transformations are applied on this (converting zip codes to city names, splitting/merging objects from one application into objects in the other applications, and so on).


== challenges of integration ==
system integration can be challenging for organizations and these challenges can diminish their overall return on investment after implementing new software solutions. some of these challenges include lack of trust and willing to share data with other companies, unwillingness to outsource various operations to a third party, lack of clear communication and responsibilities, disagreement from partners on where functionality should reside, high cost of integration, difficulty finding good talents, data silos, and common api standards. these challenges result in creating hurdles that “prevent or slow down business systems integration within and among companies”. clear communication and simplified information exchange are key elements in building long term system integrations that can support business requirements.


== benefits of integration ==
on the other hand, system integration projects can be incredibly rewarding. for out-of-date, legacy systems, different forms of integration offer the ability to enable real-time data sharing. this can enable, for example, publisher-subscriber data distribution models, consolidated databases, event-driven architectures, reduce manual user data entry (which can also help reduce errors), refresh or modernize the application's front-end, and offload querying and reporting from expensive operational systems to cheaper commodity systems (which can save costs, enable scalability, and free up processing power on the main operational system). usually, an extensive cost-benefit analysis is undertaken to help determine whether an integration project is worth the effort.


== see also ==


== references ==


== external links ==
csia (control system integrators association)