in logic, a three-valued logic (also trinary logic, trivalent, ternary, or trilean, sometimes abbreviated 3vl) is any of several many-valued logic systems in which there are three truth values indicating true, false and some indeterminate third value. this is contrasted with the more commonly known bivalent logics (such as classical sentential or boolean logic) which provide only for true and false.
emil leon post is credited with first introducing additional logical truth degrees in his 1921 theory of elementary propositions. the conceptual form and basic ideas of three-valued logic were initially published by jan łukasiewicz and clarence irving lewis. these were then re-formulated by grigore constantin moisil in an axiomatic algebraic form, and also extended to n-valued logics in 1945.


== pre-discovery ==
around 1910, charles sanders peirce defined a many-valued logic system. he never published it. in fact, he did not even number the three pages of notes where he defined his three-valued operators.  peirce soundly rejected the idea all propositions must be either true or false; boundary-propositions, he writes, are "at the limit between p and not p." however, as confident as he was that "triadic logic is universally true," he also jotted down that "all this is mighty close to nonsense." only in 1966, when max fisch and atwell turquette began publishing what they rediscovered in his unpublished manuscripts, did peirce's triadic ideas become widely known.


== representation of values ==
as with bivalent logic, truth values in ternary logic may be represented numerically using various representations of the ternary numeral system.  a few of the more common examples are:

in balanced ternary, each digit has one of 3 values: −1, 0, or +1; these values may also be simplified to −, 0, +, respectively;
in the redundant binary representation, each digit can have a value of −1, 0, 0/1 (the value 0/1 has two different representations);
in the ternary numeral system, each digit is a trit (trinary digit) having a value of: 0, 1, or 2;
in the skew binary number system, only the least-significant non-zero digit can have a value of 2, and the remaining digits have a value of 0 or 1;
1 for true, 2 for false, and 0 for unknown, unknowable/undecidable, irrelevant, or both;
0 for false, 1 for true, and a third non-integer "maybe" symbol such as ?, #, ½, or xy.inside a ternary computer, ternary values are represented by ternary signals.
this article mainly illustrates a system of ternary propositional logic using the truth values {false, unknown, true}, and extends conventional boolean connectives to a trivalent context. ternary predicate logics exist as well; these may have readings of the quantifier different from classical (binary) predicate logic and may include alternative quantifiers as well.


== logics ==
where boolean logic has 22 = 4 unary operators, the addition of a third value in ternary logic leads to a total of 33 = 27 distinct operators on a single input value.  similarly, where boolean logic has 22×2 = 16 distinct binary operators (operators with 2 inputs), ternary logic has 33×3 = 19,683 such operators.  where we can easily name a significant fraction of the boolean operators (not, and,  nand, or, nor, xor, xnor, equivalence, implication), it is unreasonable to attempt to name all but a small fraction of the possible ternary operators.


=== kleene and priest logics ===

below is a set of truth tables showing the logic operations for stephen cole kleene's "strong logic of indeterminacy" and graham priest's "logic of paradox".

in these truth tables, the unknown state can be thought of as neither true nor false in kleene logic, or thought of as both true and false in priest logic. the difference lies in the definition of tautologies. where kleene logic's only designated truth value is t, priest logic's designated truth values are both t and u. in kleene logic, the knowledge of whether any particular unknown state secretly represents true or false at any moment in time is not available. however, certain logical operations can yield an unambiguous result, even if they involve at least one unknown operand. for example, because true or true equals true, and true or false also equals true, one can infer that true or unknown equals true, as well. in this example, because either bivalent state could be underlying the unknown state, but either state also yields the same result, a definitive true results in all three cases.
if numeric values, e.g. balanced ternary values, are assigned to false, unknown and true such that false is less than unknown and unknown is less than true, then a and b and c... = min(a, b, c ...) and a or b or c ... = max(a, b, c...).
material implication for kleene logic can be defined as:

  
    
      
        a
        →
        b
         
        
          
            =
            
              
              
                d
                e
                f
              
            
          
        
         
        
          
            or
          
        
        (
         
        
          
            not
          
        
        (
        a
        )
        ,
         
        b
        )
      
    
    {\displaystyle a\rightarrow b\ {\overset {\underset {\mathrm {def} }{}}{=}}\ {\mbox{or}}(\ {\mbox{not}}(a),\ b)}
  , and its truth table is

which differs from that for łukasiewicz logic (described below).
kleene logic has no tautologies (valid formulas) because whenever all of the atomic components of a well-formed formula are assigned the value unknown, the formula itself must also have the value unknown. (and the only designated truth value for kleene logic is true.) however, the lack of valid formulas does not mean that it lacks valid arguments and/or inference rules. an argument is semantically valid in kleene logic if, whenever (for any interpretation/model) all of its premises are true, the conclusion must also be true. (note that the logic of paradox (lp) has the same truth tables as kleene logic, but it has two designated truth values instead of one; these are: true and both (the analogue of unknown), so that lp does have tautologies but it has fewer valid inference rules).


=== łukasiewicz logic ===

the łukasiewicz ł3 has the same tables for and, or, and not as the kleene logic given above, but differs in its definition of implication in that "unknown implies unknown" is true. this section follows the presentation from malinowski's chapter of the handbook of the history of logic, vol 8.material implication for łukasiewicz logic truth table is

in fact, using łukasiewicz's implication and negation, the other usual connectives may be derived as:

a ∨ b = (a → b) → b
a ∧ b = ¬(¬a ∨ ¬ b)
a ⇔ b = (a → b) ∧ (b → a)it is also possible to derive a few other useful unary operators (first derived by tarski in 1921):
ma = ¬a → a
la = ¬m¬a
ia = ma ∧ ¬lathey have the following truth tables:

m is read as "it is not false that..." or in the (unsuccessful) tarski–łukasiewicz attempt to axiomatize modal logic using a three-valued logic, "it is possible that..." l is read "it is true that..." or "it is necessary that..." finally i is read "it is unknown that..." or "it is contingent that..."
in łukasiewicz's ł3 the designated value is true, meaning that only a proposition having this value everywhere is considered a tautology. for example, a → a and a ↔ a are tautologies in ł3 and also in classical logic. not all tautologies of classical logic lift to ł3 "as is". for example, the law of excluded middle, a ∨ ¬a, and the law of non-contradiction, ¬(a ∧ ¬a) are not tautologies in ł3. however, using the operator i defined above, it is possible to state tautologies that are their analogues:

a ∨ ia ∨ ¬a  (law of excluded fourth)
¬(a ∧ ¬ia ∧ ¬a) (extended contradiction principle).


=== bochvar logic ===


=== ternary post logic ===
not(a) = (a + 1) mod 3, or
not(a) = (a + 1) mod (n), where (n) is the value of a logic


=== modular algebras ===
some 3vl modular algebras have been introduced more recently, motivated by circuit problems rather than philosophical issues:
cohn algebra
pradhan algebra
dubrova and muzio algebra


== applications ==


=== sql ===
the database structural query language sql implements ternary logic as a means of handling comparisons with null field content. null was originally intended to be used as a sentinel value in sql to represent missing data in a database, i.e. the assumption that an actual value exists, but that the value is not currently recorded in the database. sql uses a common fragment of the kleene k3 logic, restricted to and, or, and not tables.
in sql, the intermediate value is intended to be interpreted as unknown. explicit comparisons with null, including that of another null yields unknown. however this choice of semantics is abandoned for some set operations, e.g. union or intersect, where nulls are treated as equal with each other. critics assert that this inconsistency deprives sql of intuitive semantics in its treatment of nulls. the sql standard defines an optional feature called f571, which adds some unary operators, among which is is unknown corresponding to the łukasiewicz i in this article. the addition of is unknown to the other operators of sql's three-valued logic makes the sql three-valued logic functionally complete, meaning its logical operators can express (in combination) any conceivable three-valued logical function.


== see also ==

binary logic (disambiguation)
boolean algebra (structure)
boolean function
digital circuit
four-valued logic
paraconsistent logic § an ideal three-valued paraconsistent logic
setun – an experimental russian computer which was based on ternary logic
ternary numeral system (and balanced ternary)
three-state logic (tri-state buffer)


== references ==


== further reading ==
bergmann, merrie (2008). an introduction to many-valued and fuzzy logic: semantics, algebras, and derivation systems. cambridge university press. isbn 978-0-521-88128-9. retrieved 24 august 2013., chapters 5-9
mundici, d. the c*-algebras of three-valued logic. logic colloquium  ’88, proceedings of the colloquium held in padova 61–77 (1989). doi:10.1016/s0049-237x(08)70262-3
reichenbach, hans (1944). philosophic foundations of quantum mechanics. university of california press. dover 1998: isbn 0-486-40459-5


== external links ==
introduction to many-valued logics by bertram fronhöfer. handout from a 2011 summer class at technische universität dresden. (despite the title, this is almost entirely about three-valued logics.)