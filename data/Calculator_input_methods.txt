there are various ways in which calculators interpret keystrokes. these can be categorized into two main types:

on a single-step or immediate-execution calculator, the user presses a key for each operation, calculating all the intermediate results, before the final value is shown.
on an expression or formula calculator, one types in an expression and then presses a key, such as "=" or "enter", to evaluate the expression. there are various systems for typing in an expression, as described below.


== immediate execution ==

the immediate execution mode of operation (also known as single-step, algebraic entry system (aes) or chain calculation mode) is commonly employed on most general-purpose calculators. in most simple four-function calculators, such as the windows calculator in standard mode and those included with most early operating systems, each binary operation is executed as soon as the next operator is pressed, and therefore the order of operations in a mathematical expression is not taken into account. scientific calculators, including the scientific mode in the windows calculator and most modern software calculators, have buttons for brackets and can take order of operation into account. also, for unary operations, like √ or x2, the number is entered first, then the operator; this is largely because the display screens on these kinds of calculators are generally composed entirely of seven-segment characters and thus capable  of displaying only numbers, not the functions associated with them. this mode of operation also makes it impossible to change the expression being input without clearing the display entirely.

the first and second example have been given twice. the first version is for simple calculators, showing how it is necessary to rearrange operands in order to get the correct result. the second version is for scientific calculators, where operator precedence is observed.
immediate-execution calculators are based on a mixture of infix and postfix notation: binary operations are done as infix, but unary operations are postfix. because operators are applied one-at-a-time, the user must work out which operator key to use at each stage, and this can lead to problems. when discussing these problems, harold thimbleby has pointed out that button-operated calculators "require numbers and operation signs to be punched in a certain order, and mistakes are easy to make and hard to spot".problems can occur because, for anything but the simplest calculation, in order to work out the value of a written formula, the user of a button-operated calculator is required to:

rearrange the formula so that the value can be calculated by pressing buttons one at a time, while taking operator precedence and parentheses into account.
use memory buttons to ensure that operations are applied in the correct order.
use the special buttons ± and 1/x, that do not correspond to operations in the formula, for non-commutative operators.mistakes can be hard to spot because:

for the above reasons, the sequence of button presses may bear little resemblance to the original formula.
the operation carried out when a button is pressed is not always the same as the button, but could be a previously entered operation.


=== examples of difficulties ===
the simplest example given by thimbleby of a possible problem when using an immediate-execution calculator is 4 × (−5). as a written formula the value of this is −20 because the minus sign is intended to indicate a negative number, rather than a subtraction, and this is the way that it would be interpreted by a formula calculator.
on an immediate-execution calculator, depending on which keys are used and the order in which they are pressed, the result for this calculation may be different. also there are differences between calculators in the way a given sequence of button presses is interpreted. the result can be:

−1: if the subtraction button − is pressed after the multiplication ×, it is interpreted as a correction of the × rather than a minus sign, so that 4 − 5 is calculated.
20: if the change-sign button ± is pressed before the 5, it isn't interpreted as −5, and 4 × 5 is calculated.
−20: to get the right answer, ± must be pressed last, even though the minus sign isn't written last in the formula.the effects of operator precedence, parentheses and non-commutative operators, on the sequence of button presses, are illustrated by:

4 − 5 × 6: the multiplication must be done first, and the formula has to be rearranged and calculated as −5 × 6 + 4. so ± and addition have to be used rather than subtraction. when + is pressed, the multiplication is performed.
4 × (5 + 6): the addition must be done first, so the calculation carried out is (5 + 6) × 4. when × is pressed, the addition is performed.
4 / (5 + 6): one way to do this is to calculate (5 + 6) / 4 first and then use the 1/x button, so the calculation carried out is 1/[(5 + 6)/4].
4 × 5 + 6 × 7: the two multiplications must be done before the addition, and one of the results must be put into memory.these are only simple examples, but immediate-execution calculators can present even greater problems in more complex cases. in fact, thimbleby claims that users may have been conditioned to avoid them for all but the simplest calculations.


=== declarative and imperative tools ===
the potential problems with immediate-execution calculators stem from the fact that they are imperative. this means that the user must provide details of how the calculation has to be performed.
thimbleby has identified the need for a calculator that is more automatic and therefore easier to use, and he states that such a calculator should be more declarative. this means that the user should be able to specify only what has to be done, not how, and in which order, it has to be done.
formula calculators are more declarative because the typed-in formula specifies what is to be done, and the user does not have to provide any details of the step-by-step order in which the calculation has to be performed.
declarative solutions are easier to understand than imperative solutions, and there has been a long-term trend from imperative to declarative methods. formula calculators are part of this trend.
many software tools for the general user, such as spreadsheets, are declarative. formula calculators are examples of such tools.


=== using the full power of the computer ===
software calculators that simulate hand-held, immediate execution calculators do not use the full power of the computer: "a computer is a far more powerful device than a hand-held calculator, and thus it is illogical and limiting to duplicate hand-held calculators on a computer." (haxial software pty ltd) formula calculators use more of the computer's power because, besides calculating the value of a formula, they work out the order in which things should be done.


== infix notation ==

infix notation is a method where unary operations are input into the calculator in the same order as they are written on paper. different forms of this input scheme exist. in the algebraic entry system with hierarchy (aesh), the precedence of basic mathematical operators is taken into account, whereas calculators with algebraic entry system with parentheses (aesp) support the entry of parentheses. an input scheme known as algebraic operating system (aos) combines both.calculators that use infix notation tend to incorporate a dot-matrix display to display the expression being entered, frequently accompanied by a seven-segment display for the result of the expression. because the expression is not evaluated until it is fully entered, there is provision for editing the entered expression at any point prior to evaluation, as well as replaying entered expressions and their answers from memory.
most graphing calculators by casio and texas instruments use this method. on its scientific calculators, sharp calls this method direct algebraic logic (d.a.l.), and casio calls this method the visually perfect algebraic method (v.p.a.m.).


== reverse polish notation ==

in reverse polish notation, also known as postfix notation, all operations are entered after the operands on which the operation is performed. reverse polish notation is parenthesis-free, which usually leads to fewer button presses needed to perform an operation. by the use of a stack, one can enter formulas without the need to rearrange operands.
hewlett-packard's calculators are well-known examples among calculators which use rpn. early models, such as the hp-35, used rpn entirely without any alternative methods. later models, such as the hp 35s, also had infix notation and could conveniently allow users to switch between it and rpn.

note: the first example illustrates one of the few cases where reverse polish notation does not use the fewest button presses – provided one does not rearrange operands. if one would do so then only six keystrokes would be needed.


== basic notation ==

basic notation is a particular implementation of infix notation where functions require their parameters to be in brackets.
this method was used from the 1980s to the 1990s in basic programmable calculators and pocket computers. texas instruments would later implement the method in many of its graphing calculators, including the ti-83 and ti-84 plus series. most computer algebra systems also use this as the default input method.
in basic notation, the formula is entered as it would be entered in basic, using the print command – the print command itself being optional. on pressing "enter" or "=", the result would be displayed. as with standard infix notation, typing mistakes in the entered formula could be corrected using the same editor function as the one used when programming the calculator.

for the second example, two options are given depending on if the basic programmable pocket computers have dedicated trigonometric keys or not.


== ten key notation ==

the ten-key notation input method first became popular with accountants' paper tape adding machines. it generally makes the assumption that entered numbers are being summed, although other operations are supported. each number entered is followed by its sign (+/−), and a running total is kept. an assumption is made that the last operand can be implicitly used next, so by just entering another + (for example), one will reuse the most recent operand. ten key input mode is available in printing calculators from companies such as sharp, and in software calculators like judy's tenkey used by accounting firms. online tenkey training and certification tools are available as well, and some businesses use ten key typing speed as an employment criterion.


== mathematical display ==

modern computer algebra systems, as well as many scientific and graphing calculators, allow for "pretty-printing", that is, entry of equations such that fractions, surds and integrals, etc. are displayed in the way they would normally be written. such calculators are generally similar in appearance to those using infix notation, but feature a full dot-matrix display and templates for entering expressions, which are navigated using arrow keys on the calculator. the templates contain spaces for values or expressions to be entered, and empty values would typically result in a syntax error, making it more cumbersome to navigate than standard infix notation; standard infix notation is often an option on such calculators as well.
casio used to call this feature natural display or natural textbook display, but now uses natural-vpam. sharp calls this writeview on its scientific calculators and simply equation editor on its graphing calculators. hp calls this its textbook display setting, which can be used in both rpn and algebraic mode and in both the stack and in the equation writer application. mathematica calls this semantic-faithful typesetting. mathcad calls this standard math notation. maple has a math equation editor, but does not have a special name for this input method. texas instruments calls it mathprint, incorporating it in its high-end calculators, such as the ti-nspire series, and in 2011 added the feature to its ti-84 series with the 2.55 os update.
for the second example, two options are given, depending on whether the calculators will automatically insert needed parentheses or not. machines equipped with an alphanumeric display will display sin(30)×cos(30) before ↵ enter is pressed.


== see also ==
calculator
comparison of software calculators
computer algebra system
graphing calculator
keystroke programming
mathematical notation
pocket computer
programmable calculator
scientific calculator


== references ==