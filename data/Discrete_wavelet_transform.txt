in numerical analysis and functional analysis, a discrete wavelet transform (dwt) is any wavelet transform for which the wavelets are discretely sampled. as with other wavelet transforms, a key advantage it has over fourier transforms is temporal resolution: it captures both frequency and location information (location in time).


== examples ==


=== haar wavelets ===

the first dwt was invented by hungarian mathematician alfréd haar. for an input represented by a list of 
  
    
      
        
          2
          
            n
          
        
      
    
    {\displaystyle 2^{n}}
   numbers, the haar wavelet transform may be considered to pair up input values, storing the difference and passing the sum. this process is repeated recursively, pairing up the sums to prove the next scale, which leads to 
  
    
      
        
          2
          
            n
          
        
        −
        1
      
    
    {\displaystyle 2^{n}-1}
   differences and a final sum.


=== daubechies wavelets ===

the most commonly used set of discrete wavelet transforms was formulated by the belgian mathematician ingrid daubechies in 1988. this formulation is based on the use of recurrence relations to generate progressively finer discrete samplings of an implicit mother wavelet function; each resolution is twice that of the previous scale. in her seminal paper, daubechies derives a family of wavelets, the first of which is the haar wavelet. interest in this field has exploded since then, and many variations of daubechies' original wavelets were developed.


=== the dual-tree complex wavelet transform (dℂwt) ===

the dual-tree complex wavelet transform (ℂwt) is a relatively recent enhancement to the discrete wavelet transform (dwt), with important additional properties: it is nearly shift invariant and directionally selective in two and higher dimensions. it achieves this with a redundancy factor of only 
  
    
      
        
          2
          
            d
          
        
      
    
    {\displaystyle 2^{d}}
  , substantially lower than the undecimated dwt. the multidimensional (m-d) dual-tree ℂwt is nonseparable but is based on a computationally efficient, separable filter bank (fb).


=== others ===
other forms of discrete wavelet transform include the legall-tabatabai (lgt) 5/3 wavelet developed by didier le gall and ali j. tabatabai in 1988 (used in jpeg 2000 or jpeg xs ), the binomial qmf developed by ali naci akansu in 1990, the set partitioning in hierarchical trees (spiht) algorithm developed by amir said with william a. pearlman in 1996, the non- or undecimated wavelet transform (where downsampling is omitted), and the newland transform (where an orthonormal basis of wavelets is formed from appropriately constructed top-hat filters in frequency space). wavelet packet transforms are also related to the discrete wavelet transform.  complex wavelet transform is another form.


== properties ==
the haar dwt illustrates the desirable properties of wavelets in general. first, it can be performed in 
  
    
      
        o
        (
        n
        )
      
    
    {\displaystyle o(n)}
   operations; second, it captures not only a notion of the frequency content of the input, by examining it at different scales, but also temporal content, i.e. the times at which these frequencies occur. combined, these two properties make the fast wavelet transform (fwt) an alternative to the conventional fast fourier transform (fft).


=== time issues ===
due to the rate-change operators in the filter bank, the discrete wt is not time-invariant but actually very sensitive to the alignment of the signal in time. to address the time-varying problem of wavelet transforms, mallat and zhong proposed a new algorithm for wavelet representation of a signal, which is invariant to time shifts. according to this algorithm, which is called a ti-dwt, only the scale parameter is sampled along the dyadic sequence 2^j (j∈z) and the wavelet transform is calculated for each point in time.


== applications ==
the discrete wavelet transform has a huge number of applications in science, engineering, mathematics and computer science. most notably, it is used for signal coding, to represent a discrete signal in a more redundant form, often as a preconditioning for data compression. practical applications can also be found in signal processing of accelerations for gait analysis, image processing, in digital communications and many others.it is shown that discrete wavelet transform (discrete in scale and shift, and continuous in time) is successfully implemented as analog filter bank in biomedical signal processing for design of low-power pacemakers and also in ultra-wideband (uwb) wireless communications.


== example in image processing ==

wavelets are often used to denoise two dimensional signals, such as images.  the following example provides three steps to remove unwanted white gaussian noise from the noisy image shown. matlab was used to import and filter the image.
the first step is to choose a wavelet type, and a level n of decomposition.  in this case biorthogonal 3.5 wavelets were chosen with a level n of 10. biorthogonal wavelets are commonly used in image processing to detect and filter white gaussian noise, due to their high contrast of neighboring pixel intensity values. using these wavelets a wavelet transformation is performed on the two dimensional image.
following the decomposition of the image file, the next step is to determine threshold values for each level from 1 to n. birgé-massart strategy is a fairly common method for selecting these thresholds.  using this process individual thresholds are made for n = 10 levels. applying these thresholds are the majority of the actual filtering of the signal.
the final step is to reconstruct the image from the modified levels. this is accomplished using an inverse wavelet transform. the resulting image, with white gaussian noise removed is shown below the original image. when filtering any form of data it is important to quantify the signal-to-noise-ratio of the result.  in this case, the snr of the noisy image in comparison to the original was 30.4958%, and the snr of the denoised image is 32.5525%.  the resulting improvement of the wavelet filtering is a snr gain of 2.0567%.it is important to note that choosing other wavelets, levels, and thresholding strategies can result in different types of filtering.  in this example, white gaussian noise was chosen to be removed. although, with different thresholding, it could just as easily have been amplified.

to illustrate the differences and similarities between the discrete wavelet transform with the discrete fourier transform, consider the dwt and dft of the following sequence: (1,0,0,0), a unit impulse.
the dft has orthogonal basis (dft matrix):

  
    
      
        
          
            [
            
              
                
                  1
                
                
                  1
                
                
                  1
                
                
                  1
                
              
              
                
                  1
                
                
                  −
                  i
                
                
                  −
                  1
                
                
                  i
                
              
              
                
                  1
                
                
                  −
                  1
                
                
                  1
                
                
                  −
                  1
                
              
              
                
                  1
                
                
                  i
                
                
                  −
                  1
                
                
                  −
                  i
                
              
            
            ]
          
        
      
    
    {\displaystyle {\begin{bmatrix}1&1&1&1\\1&-i&-1&i\\1&-1&1&-1\\1&i&-1&-i\end{bmatrix}}}
  while the dwt with haar wavelets for length 4 data has orthogonal basis in the rows of:

  
    
      
        
          
            [
            
              
                
                  1
                
                
                  1
                
                
                  1
                
                
                  1
                
              
              
                
                  1
                
                
                  1
                
                
                  −
                  1
                
                
                  −
                  1
                
              
              
                
                  1
                
                
                  −
                  1
                
                
                  0
                
                
                  0
                
              
              
                
                  0
                
                
                  0
                
                
                  1
                
                
                  −
                  1
                
              
            
            ]
          
        
      
    
    {\displaystyle {\begin{bmatrix}1&1&1&1\\1&1&-1&-1\\1&-1&0&0\\0&0&1&-1\end{bmatrix}}}
  (to simplify notation, whole numbers are used, so the bases are orthogonal but not orthonormal.)
preliminary observations include:

sinusoidal waves differ only in their frequency. the first does not complete any cycles, the second completes one full cycle, the third completes two cycles, and the fourth completes three cycles (which is equivalent to completing one cycle in the opposite direction). differences in phase can be represented by multiplying a given basis vector by a complex constant.
wavelets, by contrast, have both frequency and location. as before, the first completes zero cycles, and the second completes one cycle. however, the third and fourth both have the same frequency, twice that of the first. rather than differing in frequency, they differ in location — the third is nonzero over the first two elements, and the fourth is nonzero over the second two elements.

  
    
      
        
          
            
              
                (
                1
                ,
                0
                ,
                0
                ,
                0
                )
              
              
                
                =
                
                  
                    1
                    4
                  
                
                (
                1
                ,
                1
                ,
                1
                ,
                1
                )
                +
                
                  
                    1
                    4
                  
                
                (
                1
                ,
                1
                ,
                −
                1
                ,
                −
                1
                )
                +
                
                  
                    1
                    2
                  
                
                (
                1
                ,
                −
                1
                ,
                0
                ,
                0
                )
                
                
                  haar dwt
                
              
            
            
              
                (
                1
                ,
                0
                ,
                0
                ,
                0
                )
              
              
                
                =
                
                  
                    1
                    4
                  
                
                (
                1
                ,
                1
                ,
                1
                ,
                1
                )
                +
                
                  
                    1
                    4
                  
                
                (
                1
                ,
                i
                ,
                −
                1
                ,
                −
                i
                )
                +
                
                  
                    1
                    4
                  
                
                (
                1
                ,
                −
                1
                ,
                1
                ,
                −
                1
                )
                +
                
                  
                    1
                    4
                  
                
                (
                1
                ,
                −
                i
                ,
                −
                1
                ,
                i
                )
                
                
                  dft
                
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}(1,0,0,0)&={\frac {1}{4}}(1,1,1,1)+{\frac {1}{4}}(1,1,-1,-1)+{\frac {1}{2}}(1,-1,0,0)\qquad {\text{haar dwt}}\\(1,0,0,0)&={\frac {1}{4}}(1,1,1,1)+{\frac {1}{4}}(1,i,-1,-i)+{\frac {1}{4}}(1,-1,1,-1)+{\frac {1}{4}}(1,-i,-1,i)\qquad {\text{dft}}\end{aligned}}}
  the dwt demonstrates the localization: the (1,1,1,1) term gives the average signal value, the (1,1,–1,–1) places the signal in the left side of the domain, and the 
(1,–1,0,0) places it at the left side of the left side, and truncating at any stage yields a downsampled version of the signal:

  
    
      
        
          
            
              
              
                
                  (
                  
                    
                      
                        1
                        4
                      
                    
                    ,
                    
                      
                        1
                        4
                      
                    
                    ,
                    
                      
                        1
                        4
                      
                    
                    ,
                    
                      
                        1
                        4
                      
                    
                  
                  )
                
              
            
            
              
              
                
                  (
                  
                    
                      
                        1
                        2
                      
                    
                    ,
                    
                      
                        1
                        2
                      
                    
                    ,
                    0
                    ,
                    0
                  
                  )
                
                
                
                  2-term truncation
                
              
            
            
              
              
                
                  (
                  
                    1
                    ,
                    0
                    ,
                    0
                    ,
                    0
                  
                  )
                
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}&\left({\frac {1}{4}},{\frac {1}{4}},{\frac {1}{4}},{\frac {1}{4}}\right)\\&\left({\frac {1}{2}},{\frac {1}{2}},0,0\right)\qquad {\text{2-term truncation}}\\&\left(1,0,0,0\right)\end{aligned}}}
  
the dft, by contrast, expresses the sequence by the interference of waves of various frequencies – thus truncating the series yields a low-pass filtered version of the series:

  
    
      
        
          
            
              
              
                
                  (
                  
                    
                      
                        1
                        4
                      
                    
                    ,
                    
                      
                        1
                        4
                      
                    
                    ,
                    
                      
                        1
                        4
                      
                    
                    ,
                    
                      
                        1
                        4
                      
                    
                  
                  )
                
              
            
            
              
              
                
                  (
                  
                    
                      
                        3
                        4
                      
                    
                    ,
                    
                      
                        1
                        4
                      
                    
                    ,
                    −
                    
                      
                        1
                        4
                      
                    
                    ,
                    
                      
                        1
                        4
                      
                    
                  
                  )
                
                
                
                  2-term truncation
                
              
            
            
              
              
                
                  (
                  
                    1
                    ,
                    0
                    ,
                    0
                    ,
                    0
                  
                  )
                
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}&\left({\frac {1}{4}},{\frac {1}{4}},{\frac {1}{4}},{\frac {1}{4}}\right)\\&\left({\frac {3}{4}},{\frac {1}{4}},-{\frac {1}{4}},{\frac {1}{4}}\right)\qquad {\text{2-term truncation}}\\&\left(1,0,0,0\right)\end{aligned}}}
  notably, the middle approximation (2-term) differs. from the frequency domain perspective, this is a better approximation, but from the time domain perspective it has drawbacks – it exhibits undershoot – one of the values is negative, though the original series is non-negative everywhere – and ringing, where the right side is non-zero, unlike in the wavelet transform. on the other hand, the fourier approximation correctly shows a peak, and all points are within 
  
    
      
        1
        
          /
        
        4
      
    
    {\displaystyle 1/4}
   of their correct value, though all points have error. the wavelet approximation, by contrast, places a peak on the left half, but has no peak at the first point, and while it is exactly correct for half the values (reflecting location), it has an error of 
  
    
      
        1
        
          /
        
        2
      
    
    {\displaystyle 1/2}
   for the other values.
this illustrates the kinds of trade-offs between these transforms, and how in some respects the dwt provides preferable behavior, particularly for the modeling of transients.


== definition ==


=== one level of the transform ===
the dwt of a signal 
  
    
      
        x
      
    
    {\displaystyle x}
   is calculated by passing it through a series of filters.  first the samples are passed through a low-pass filter with impulse response 
  
    
      
        g
      
    
    {\displaystyle g}
    resulting in a convolution of the two:

  
    
      
        y
        [
        n
        ]
        =
        (
        x
        ∗
        g
        )
        [
        n
        ]
        =
        
          ∑
          
            k
            =
            −
            ∞
          
          
            ∞
          
        
        
          x
          [
          k
          ]
          g
          [
          n
          −
          k
          ]
        
      
    
    {\displaystyle y[n]=(x*g)[n]=\sum \limits _{k=-\infty }^{\infty }{x[k]g[n-k]}}
  the signal is also decomposed simultaneously using a high-pass filter 
  
    
      
        h
      
    
    {\displaystyle h}
  .  the outputs give the detail coefficients (from the high-pass filter) and approximation coefficients (from the low-pass).  it is important that the two filters are related to each other and they are known as a quadrature mirror filter.

however, since half the frequencies of the signal have now been removed, half the samples can be discarded according to nyquist’s rule.  the filter output of the low-pass filter 
  
    
      
        g
      
    
    {\displaystyle g}
   in the diagram above is then subsampled by 2 and further processed by passing it again through a new low-pass filter 
  
    
      
        g
      
    
    {\displaystyle g}
   and a high- pass filter 
  
    
      
        h
      
    
    {\displaystyle h}
   with  half the cut-off frequency of the previous one, i.e.:

  
    
      
        
          y
          
            
              l
              o
              w
            
          
        
        [
        n
        ]
        =
        
          ∑
          
            k
            =
            −
            ∞
          
          
            ∞
          
        
        
          x
          [
          k
          ]
          g
          [
          2
          n
          −
          k
          ]
        
      
    
    {\displaystyle y_{\mathrm {low} }[n]=\sum \limits _{k=-\infty }^{\infty }{x[k]g[2n-k]}}
  

  
    
      
        
          y
          
            
              h
              i
              g
              h
            
          
        
        [
        n
        ]
        =
        
          ∑
          
            k
            =
            −
            ∞
          
          
            ∞
          
        
        
          x
          [
          k
          ]
          h
          [
          2
          n
          −
          k
          ]
        
      
    
    {\displaystyle y_{\mathrm {high} }[n]=\sum \limits _{k=-\infty }^{\infty }{x[k]h[2n-k]}}
  this decomposition has halved the time resolution since only half of each filter output characterises the signal.  however, each output has half the frequency band of the input, so the frequency resolution has been doubled.
with the subsampling operator 
  
    
      
        ↓
      
    
    {\displaystyle \downarrow }
  

  
    
      
        (
        y
        ↓
        k
        )
        [
        n
        ]
        =
        y
        [
        k
        n
        ]
      
    
    {\displaystyle (y\downarrow k)[n]=y[kn]}
  the above summation can be written more concisely.

  
    
      
        
          y
          
            
              l
              o
              w
            
          
        
        =
        (
        x
        ∗
        g
        )
        ↓
        2
      
    
    {\displaystyle y_{\mathrm {low} }=(x*g)\downarrow 2}
  

  
    
      
        
          y
          
            
              h
              i
              g
              h
            
          
        
        =
        (
        x
        ∗
        h
        )
        ↓
        2
      
    
    {\displaystyle y_{\mathrm {high} }=(x*h)\downarrow 2}
  however computing a complete convolution 
  
    
      
        x
        ∗
        g
      
    
    {\displaystyle x*g}
   with subsequent downsampling would waste computation time.
the lifting scheme is an optimization where these two computations are interleaved.


=== cascading and filter banks ===
this decomposition is repeated to further increase the frequency resolution and the approximation coefficients decomposed with high- and low-pass filters and then down-sampled.  this is represented as a binary tree with nodes representing a sub-space with a different time-frequency localisation.  the tree is known as a filter bank.

at each level in the above diagram the signal is decomposed into low and high frequencies.  due to the decomposition process the input signal must be a multiple of 
  
    
      
        
          2
          
            n
          
        
      
    
    {\displaystyle 2^{n}}
   where 
  
    
      
        n
      
    
    {\displaystyle n}
   is the number of levels.
for example a signal with 32 samples, frequency range 0 to 
  
    
      
        
          f
          
            n
          
        
      
    
    {\displaystyle f_{n}}
   and 3 levels of decomposition, 4 output scales are produced:


== relationship to the mother wavelet ==
the filterbank implementation of wavelets can be interpreted as computing the wavelet coefficients of a discrete set of child wavelets for a given mother wavelet 
  
    
      
        ψ
        (
        t
        )
      
    
    {\displaystyle \psi (t)}
  .  in the case of the discrete wavelet transform, the mother wavelet is shifted and scaled by powers of two

  
    
      
        
          ψ
          
            j
            ,
            k
          
        
        (
        t
        )
        =
        
          
            1
            
              
                2
                
                  j
                
              
            
          
        
        ψ
        
          (
          
            
              
                t
                −
                k
                
                  2
                  
                    j
                  
                
              
              
                2
                
                  j
                
              
            
          
          )
        
      
    
    {\displaystyle \psi _{j,k}(t)={\frac {1}{\sqrt {2^{j}}}}\psi \left({\frac {t-k2^{j}}{2^{j}}}\right)}
  
where 
  
    
      
        j
      
    
    {\displaystyle j}
   is the scale parameter and 
  
    
      
        k
      
    
    {\displaystyle k}
   is the shift parameter, both which are integers.
recall that the wavelet coefficient 
  
    
      
        γ
      
    
    {\displaystyle \gamma }
   of a signal 
  
    
      
        x
        (
        t
        )
      
    
    {\displaystyle x(t)}
   is the projection of 
  
    
      
        x
        (
        t
        )
      
    
    {\displaystyle x(t)}
   onto a wavelet, and let 
  
    
      
        x
        (
        t
        )
      
    
    {\displaystyle x(t)}
   be a signal of length 
  
    
      
        
          2
          
            n
          
        
      
    
    {\displaystyle 2^{n}}
  .  in the case of a child wavelet in the discrete family above,

  
    
      
        
          γ
          
            j
            k
          
        
        =
        
          ∫
          
            −
            ∞
          
          
            ∞
          
        
        x
        (
        t
        )
        
          
            1
            
              
                2
                
                  j
                
              
            
          
        
        ψ
        
          (
          
            
              
                t
                −
                k
                
                  2
                  
                    j
                  
                
              
              
                2
                
                  j
                
              
            
          
          )
        
        d
        t
      
    
    {\displaystyle \gamma _{jk}=\int _{-\infty }^{\infty }x(t){\frac {1}{\sqrt {2^{j}}}}\psi \left({\frac {t-k2^{j}}{2^{j}}}\right)dt}
  
now fix 
  
    
      
        j
      
    
    {\displaystyle j}
   at a particular scale, so that 
  
    
      
        
          γ
          
            j
            k
          
        
      
    
    {\displaystyle \gamma _{jk}}
   is a function of 
  
    
      
        k
      
    
    {\displaystyle k}
   only.  in light of the above equation, 
  
    
      
        
          γ
          
            j
            k
          
        
      
    
    {\displaystyle \gamma _{jk}}
   can be viewed as a convolution of 
  
    
      
        x
        (
        t
        )
      
    
    {\displaystyle x(t)}
   with a dilated, reflected, and normalized version of the mother wavelet, 
  
    
      
        h
        (
        t
        )
        =
        
          
            1
            
              
                2
                
                  j
                
              
            
          
        
        ψ
        
          (
          
            
              
                −
                t
              
              
                2
                
                  j
                
              
            
          
          )
        
      
    
    {\displaystyle h(t)={\frac {1}{\sqrt {2^{j}}}}\psi \left({\frac {-t}{2^{j}}}\right)}
  , sampled at the points 
  
    
      
        1
        ,
        
          2
          
            j
          
        
        ,
        
          2
          
            2
            j
          
        
        ,
        .
        .
        .
        ,
        
          2
          
            n
          
        
      
    
    {\displaystyle 1,2^{j},2^{2j},...,2^{n}}
  .  but this is precisely what the detail coefficients give at level 
  
    
      
        j
      
    
    {\displaystyle j}
   of the discrete wavelet transform.  therefore, for an appropriate choice of 
  
    
      
        h
        [
        n
        ]
      
    
    {\displaystyle h[n]}
   and 
  
    
      
        g
        [
        n
        ]
      
    
    {\displaystyle g[n]}
  , the detail coefficients of the filter bank correspond exactly to a wavelet coefficient of a discrete set of child wavelets for a given mother wavelet 
  
    
      
        ψ
        (
        t
        )
      
    
    {\displaystyle \psi (t)}
  .
as an example, consider the discrete haar wavelet, whose mother wavelet is 
  
    
      
        ψ
        =
        [
        1
        ,
        −
        1
        ]
      
    
    {\displaystyle \psi =[1,-1]}
  .  then the dilated, reflected, and normalized version of this wavelet is 
  
    
      
        h
        [
        n
        ]
        =
        
          
            1
            
              2
            
          
        
        [
        −
        1
        ,
        1
        ]
      
    
    {\displaystyle h[n]={\frac {1}{\sqrt {2}}}[-1,1]}
  , which is, indeed, the highpass decomposition filter for the discrete haar wavelet transform.


== time complexity ==
the filterbank implementation of the discrete wavelet transform takes only o(n) in certain cases, as compared to o(n log n) for the fast fourier transform.
note that if 
  
    
      
        g
        [
        n
        ]
      
    
    {\displaystyle g[n]}
   and 
  
    
      
        h
        [
        n
        ]
      
    
    {\displaystyle h[n]}
   are both a constant length (i.e. their length is independent of n), then 
  
    
      
        x
        ∗
        h
      
    
    {\displaystyle x*h}
   and 
  
    
      
        x
        ∗
        g
      
    
    {\displaystyle x*g}
   each take o(n) time.  the wavelet filterbank does each of these two o(n) convolutions, then splits the signal into two branches of size n/2.  but it only recursively splits the upper branch convolved with 
  
    
      
        g
        [
        n
        ]
      
    
    {\displaystyle g[n]}
   (as contrasted with the fft, which recursively splits both the upper branch and the lower branch).  this leads to the following recurrence relation

  
    
      
        t
        (
        n
        )
        =
        2
        n
        +
        t
        
          (
          
            
              n
              2
            
          
          )
        
      
    
    {\displaystyle t(n)=2n+t\left({\frac {n}{2}}\right)}
  which leads to an o(n) time for the entire operation, as can be shown by a geometric series expansion of the above relation.
as an example, the discrete haar wavelet transform is linear, since in that case 
  
    
      
        h
        [
        n
        ]
      
    
    {\displaystyle h[n]}
   and 
  
    
      
        g
        [
        n
        ]
      
    
    {\displaystyle g[n]}
   are constant length 2.

  
    
      
        h
        [
        n
        ]
        =
        
          [
          
            
              
                
                  −
                  
                    
                      2
                    
                  
                
                2
              
            
            ,
            
              
                
                  2
                
                2
              
            
          
          ]
        
        g
        [
        n
        ]
        =
        
          [
          
            
              
                
                  2
                
                2
              
            
            ,
            
              
                
                  2
                
                2
              
            
          
          ]
        
      
    
    {\displaystyle h[n]=\left[{\frac {-{\sqrt {2}}}{2}},{\frac {\sqrt {2}}{2}}\right]g[n]=\left[{\frac {\sqrt {2}}{2}},{\frac {\sqrt {2}}{2}}\right]}
  the locality of wavelets, coupled with the o(n) complexity, guarantees that the transform can be computed online (on a streaming basis). this property is in sharp contrast to fft, which requires access to the entire signal at once. it also applies to the multi-scale transform and also to the multi-dimensional transforms (e.g., 2-d dwt).


== other transforms ==
the adam7 algorithm, used for interlacing in the portable network graphics (png) format, is a multiscale model of the data which is similar to a dwt with haar wavelets. unlike the dwt, it has a specific scale – it starts from an 8×8 block, and it downsamples the image, rather than decimating (low-pass filtering, then downsampling). it thus offers worse frequency behavior, showing artifacts (pixelation) at the early stages, in return for simpler implementation. 
the multiplicative (or geometric) discrete wavelet transform  is a variant that applies to an observation model 
  
    
      
        
          
            y
          
        
        =
        f
        
          
            x
          
        
      
    
    {\displaystyle {\bf {y}}=f{\bf {x}}}
   involving interactions of a positive regular function 
  
    
      
        f
      
    
    {\displaystyle f}
   and a multiplicative independent positive noise 
  
    
      
        x
      
    
    {\displaystyle x}
  , with 
  
    
      
        
          e
        
        x
        =
        1
      
    
    {\displaystyle \mathbb {e} x=1}
  . denote 
  
    
      
        
          
            w
          
        
      
    
    {\displaystyle {\cal {w}}}
  , a wavelet transform. since 
  
    
      
        f
        
          
            x
          
        
        =
        f
        +
        
          f
          (
          
            
              x
            
          
          −
          1
          )
        
      
    
    {\displaystyle f{\bf {x}}=f+{f({\bf {x}}-1)}}
  , then the standard (additive) discrete wavelet transform 
  
    
      
        
          
            
              w
              
                +
              
            
          
        
      
    
    {\displaystyle {\cal {w^{+}}}}
   is such that 
  
    
      
        
          
            
              w
              
                +
              
            
          
        
        
          
            y
          
        
        =
        
          
            
              w
              
                +
              
            
          
        
        f
        +
        
          
            
              w
              
                +
              
            
          
        
        
          f
          (
          
            
              x
            
          
          −
          1
          )
        
        ,
      
    
    {\displaystyle {\cal {w^{+}}}{\bf {y}}={\cal {w^{+}}}f+{\cal {w^{+}}}{f({\bf {x}}-1)},}
   where detail coefficients 
  
    
      
        
          
            
              w
              
                +
              
            
          
        
        
          f
          (
          
            
              x
            
          
          −
          1
          )
        
      
    
    {\displaystyle {\cal {w^{+}}}{f({\bf {x}}-1)}}
   cannot be considered as sparse in general, due to the contribution of 
  
    
      
        f
      
    
    {\displaystyle f}
   in the latter expression. in the multiplicative framework, the wavelet transform is such that 
  
    
      
        
          
            
              w
              
                ×
              
            
          
        
        
          
            y
          
        
        =
        
          (
          
            
              
                
                  w
                  
                    ×
                  
                
              
            
            f
          
          )
        
        ×
        
          (
          
            
              
                
                  w
                  
                    ×
                  
                
              
            
            
              
                x
              
            
          
          )
        
        .
      
    
    {\displaystyle {\cal {w^{\times }}}{\bf {y}}=\left({\cal {w^{\times }}}f\right)\times \left({\cal {w^{\times }}}{\bf {x}}\right).}
   this `embedding'  of wavelets in a multiplicative algebra involves generalized multiplicative approximations and detail operators: for instance, in the case of the haar wavelets, then up to the normalization coefficient 
  
    
      
        α
      
    
    {\displaystyle \alpha }
  ,  the standard 
  
    
      
        
          
            
              w
              
                +
              
            
          
        
      
    
    {\displaystyle {\cal {w^{+}}}}
   approximations (arithmetic mean) 
  
    
      
        
          c
          
            k
          
        
        =
        α
        (
        
          y
          
            k
          
        
        +
        
          y
          
            k
            −
            1
          
        
        )
      
    
    {\displaystyle c_{k}=\alpha (y_{k}+y_{k-1})}
   and details (arithmetic differences) 
  
    
      
        
          d
          
            k
          
        
        =
        α
        (
        
          y
          
            k
          
        
        −
        
          y
          
            k
            −
            1
          
        
        )
      
    
    {\displaystyle d_{k}=\alpha (y_{k}-y_{k-1})}
   become respectively geometric mean approximations 
  
    
      
        
          c
          
            k
          
          
            ∗
          
        
        =
        (
        
          y
          
            k
          
        
        ×
        
          y
          
            k
            −
            1
          
        
        
          )
          
            α
          
        
      
    
    {\displaystyle c_{k}^{\ast }=(y_{k}\times y_{k-1})^{\alpha }}
   and geometric differences (details) 
  
    
      
        
          d
          
            k
          
          
            ∗
          
        
        =
        
          
            (
            
              
                
                  y
                  
                    k
                  
                
                
                  y
                  
                    k
                    −
                    1
                  
                
              
            
            )
          
          
            α
          
        
      
    
    {\displaystyle d_{k}^{\ast }=\left({\frac {y_{k}}{y_{k-1}}}\right)^{\alpha }}
   when using 
  
    
      
        
          
            
              w
              
                ×
              
            
          
        
      
    
    {\displaystyle {\cal {w^{\times }}}}
  .


== code example ==
in its simplest form, the dwt is remarkably easy to compute.
the haar wavelet in java:

complete java code for a 1-d and 2-d dwt using haar, daubechies, coiflet, and legendre wavelets is available from the open source project: jwave.
furthermore, a fast lifting implementation of the discrete biorthogonal cdf 9/7 wavelet transform in c, used in the jpeg 2000 image compression standard can be found here (archived 5 march 2012).


=== example of above code ===

this figure shows an example of applying the above code to compute the haar wavelet coefficients on a sound waveform.  this example highlights two key properties of the wavelet transform:

natural signals often have some degree of smoothness, which makes them sparse in the wavelet domain.  there are far fewer significant components in the wavelet domain in this example than there are in the time domain, and most of the significant components are towards the coarser coefficients on the left.  hence, natural signals are compressible in the wavelet domain.
the wavelet transform is a multiresolution, bandpass representation of a signal.  this can be seen directly from the filterbank definition of the discrete wavelet transform given in this article.  for a signal of length 
  
    
      
        
          2
          
            n
          
        
      
    
    {\displaystyle 2^{n}}
  , the coefficients in the range 
  
    
      
        [
        
          2
          
            n
            −
            j
          
        
        ,
        
          2
          
            n
            −
            j
            +
            1
          
        
        ]
      
    
    {\displaystyle [2^{n-j},2^{n-j+1}]}
   represent a version of the original signal which is in the pass-band 
  
    
      
        
          [
          
            
              
                π
                
                  2
                  
                    j
                  
                
              
            
            ,
            
              
                π
                
                  2
                  
                    j
                    −
                    1
                  
                
              
            
          
          ]
        
      
    
    {\displaystyle \left[{\frac {\pi }{2^{j}}},{\frac {\pi }{2^{j-1}}}\right]}
  .  this is why zooming in on these ranges of the wavelet coefficients looks so similar in structure to the original signal.  ranges which are closer to the left (larger 
  
    
      
        j
      
    
    {\displaystyle j}
   in the above notation), are coarser representations of the signal, while ranges to the right represent finer details.


== see also ==
discrete cosine transform (dct)
wavelet
wavelet series
wavelet compression
list of wavelet-related transforms


== references ==


== external links ==
stanford's wavelab in matlab
libdwt, a cross-platform dwt library written in c
concise introduction to wavelets by rené puschinger