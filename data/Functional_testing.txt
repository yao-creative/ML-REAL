functional testing is a quality assurance (qa) process and a type of black-box testing  that bases its test cases on the specifications of the software component under test. functions are tested by feeding them input and examining the output, and internal program structure is rarely considered (unlike white-box testing). functional testing is conducted to evaluate the compliance of a system or component with specified functional requirements. functional testing usually describes what the system does.
since functional testing is a type of black-box testing, the software's functionality can be tested without knowing the internal workings of the software. this means that testers do not need to know programming languages or how the software has been implemented. this, in turn, could lead to reduced developer bias (or confirmation bias) in testing since the tester has not been involved in the software's development.functional testing does not imply that you are testing a function (method) of your module or class. functional testing tests a slice of functionality of the whole system.
functional testing differs from system testing in that functional testing "verifies a program by checking it against ... design document(s) or specification(s)", while system testing "validate[s] a program by checking it against the published user or system requirements."


== types ==
functional testing has many types:
smoke testing
sanity testing
regression testing
usability testing


== six steps ==
functional testing typically involves six steps
the identification of functions that the software is expected to perform
the creation of input data based on the function's specifications
the determination of output based on the function's specifications
the execution of the test case
the comparison of actual and expected outputs
to check whether the application works as per the customer need.


== see also ==


== references ==