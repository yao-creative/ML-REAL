in mathematics, particularly in the area of arithmetic, a modular multiplicative inverse of an integer a is an integer x such that the product ax is congruent to 1 with respect to the modulus m. in the standard notation of modular arithmetic this congruence is written as

  
    
      
        a
        x
        ≡
        1
        
          
          (
          mod
          
          m
          )
        
        ,
      
    
    {\displaystyle ax\equiv 1{\pmod {m}},}
  which is the shorthand way of writing the statement that m divides (evenly) the quantity ax − 1, or, put another way, the remainder after dividing ax by the integer m is 1. if a does have an inverse modulo m, then there are an infinite number of solutions of this congruence, which form a congruence class with respect to this modulus. furthermore, any integer that is congruent to a (i.e., in a's congruence class) has any element of x's congruence class as a modular multiplicative inverse. using the notation of 
  
    
      
        
          
            w
            ¯
          
        
      
    
    {\displaystyle {\overline {w}}}
   to indicate the congruence class containing w, this can be expressed by saying that the modulo multiplicative inverse of the congruence class 
  
    
      
        
          
            a
            ¯
          
        
      
    
    {\displaystyle {\overline {a}}}
   is the congruence class 
  
    
      
        
          
            x
            ¯
          
        
      
    
    {\displaystyle {\overline {x}}}
   such that:

  
    
      
        
          
            a
            ¯
          
        
        
          ⋅
          
            m
          
        
        
          
            x
            ¯
          
        
        =
        
          
            1
            ¯
          
        
        ,
      
    
    {\displaystyle {\overline {a}}\cdot _{m}{\overline {x}}={\overline {1}},}
  where the symbol 
  
    
      
        
          ⋅
          
            m
          
        
      
    
    {\displaystyle \cdot _{m}}
   denotes the multiplication of equivalence classes modulo m.
written in this way, the analogy with the usual concept of a multiplicative inverse in the set of rational or real numbers is clearly represented, replacing the numbers by congruence classes and altering the binary operation appropriately.  
as with the analogous operation on the real numbers, a fundamental use of this operation is in solving, when possible, linear congruences of the form

  
    
      
        a
        x
        ≡
        b
        
          
          (
          mod
          
          m
          )
        
        .
      
    
    {\displaystyle ax\equiv b{\pmod {m}}.}
  finding modular multiplicative inverses also has practical applications in the field of cryptography, i.e. public-key cryptography and the rsa algorithm. a benefit for the computer implementation of these applications is that there exists a very fast algorithm (the extended euclidean algorithm) that can be used for the calculation of modular multiplicative inverses.


== modular arithmetic ==

for a given positive integer m, two integers, a and b, are said to be congruent modulo m if m divides their difference. this binary relation is denoted by, 

  
    
      
        a
        ≡
        b
        
          
          (
          mod
          
          m
          )
        
        .
      
    
    {\displaystyle a\equiv b{\pmod {m}}.}
  this is an equivalence relation on the set of integers, ℤ, and the equivalence classes are called congruence classes modulo m or residue classes modulo m. let 
  
    
      
        
          
            a
            ¯
          
        
      
    
    {\displaystyle {\overline {a}}}
   denote the congruence class containing the integer a, then

  
    
      
        
          
            a
            ¯
          
        
        =
        {
        b
        ∈
        
          z
        
        ∣
        a
        ≡
        b
        
          
          (
          mod
          
          m
          )
        
        }
        .
      
    
    {\displaystyle {\overline {a}}=\{b\in \mathbb {z} \mid a\equiv b{\pmod {m}}\}.}
  a linear congruence is a modular congruence of the form

  
    
      
        a
        x
        ≡
        b
        
          
          (
          mod
          
          m
          )
        
        .
      
    
    {\displaystyle ax\equiv b{\pmod {m}}.}
  unlike linear equations over the reals, linear congruences may have zero, one or several solutions. if x is a solution of a linear congruence then every element in 
  
    
      
        
          
            x
            ¯
          
        
      
    
    {\displaystyle {\overline {x}}}
   is also a solution, so, when speaking of the number of solutions of a linear congruence we are referring to the number of different congruence classes that contain solutions. 
if d is the greatest common divisor of a and m then the linear congruence ax ≡ b (mod m) has solutions if and only if d divides b. if d divides b, then there are exactly d solutions.a modular multiplicative inverse of an integer a with respect to the modulus m is a solution of the linear congruence

  
    
      
        a
        x
        ≡
        1
        
          
          (
          mod
          
          m
          )
        
        .
      
    
    {\displaystyle ax\equiv 1{\pmod {m}}.}
  the previous result says that a solution exists if and only if gcd(a, m) = 1, that is, a and m must be relatively prime (i.e. coprime). furthermore, when this condition holds, there is exactly one solution, i.e., when it exists, a modular multiplicative inverse is unique: if b and b' are both modular multiplicative inverses of a respect to the modulus m, then

  
    
      
        a
        b
        ≡
        a
        
          b
          ′
        
        ≡
        1
        
          
          (
          mod
          
          m
          )
        
        ,
      
    
    {\displaystyle ab\equiv ab'\equiv 1{\pmod {m}},}
  therefore

  
    
      
        a
        (
        b
        −
        
          b
          ′
        
        )
        ≡
        0
        
          
          (
          mod
          
          m
          )
        
        .
      
    
    {\displaystyle a(b-b')\equiv 0{\pmod {m}}.}
  if a ≡ 0 (mod m), then gcd(a, m) = a, and a won't even have a modular multiplicative inverse. therefore, b ≡ b' (mod m).
when ax ≡ 1 (mod m) has a solution it is often denoted in this way −

  
    
      
        x
        ≡
        
          a
          
            −
            1
          
        
        
          
          (
          mod
          
          m
          )
        
        ,
      
    
    {\displaystyle x\equiv a^{-1}{\pmod {m}},}
  but this can be considered an abuse of notation since it could be misinterpreted as the reciprocal of 
  
    
      
        a
      
    
    {\displaystyle a}
   (which, contrary to the modular multiplicative inverse, is not an integer except when a is 1 or -1). the notation would be proper if a is interpreted as a token standing for the congruence class 
  
    
      
        
          
            a
            ¯
          
        
      
    
    {\displaystyle {\overline {a}}}
  , as the multiplicative inverse of a congruence class is a congruence class with the multiplication defined in the next section.


=== integers modulo m ===
the congruence relation, modulo m, partitions the set of integers into m congruence classes. operations of addition and multiplication can be defined on these m objects in the following way: to either add or multiply two congruence classes, first pick a representative (in any way) from each class, then perform the usual operation for integers on the two representatives and finally take the congruence class that the result of the integer operation lies in as the result of the operation on the congruence classes. in symbols, with 
  
    
      
        
          +
          
            m
          
        
      
    
    {\displaystyle +_{m}}
   and 
  
    
      
        
          ⋅
          
            m
          
        
      
    
    {\displaystyle \cdot _{m}}
   representing the operations on congruence classes, these definitions are 

  
    
      
        
          
            a
            ¯
          
        
        
          +
          
            m
          
        
        
          
            b
            ¯
          
        
        =
        
          
            
              a
              +
              b
            
            ¯
          
        
      
    
    {\displaystyle {\overline {a}}+_{m}{\overline {b}}={\overline {a+b}}}
  and

  
    
      
        
          
            a
            ¯
          
        
        
          ⋅
          
            m
          
        
        
          
            b
            ¯
          
        
        =
        
          
            
              a
              b
            
            ¯
          
        
        .
      
    
    {\displaystyle {\overline {a}}\cdot _{m}{\overline {b}}={\overline {ab}}.}
  these operations are well-defined, meaning that the end result does not depend on the choices of representatives that were made to obtain the result.
the m congruence classes with these two defined operations form a ring, called the ring of integers modulo m. there are several notations used for these algebraic objects, most often 
  
    
      
        
          z
        
        
          /
        
        m
        
          z
        
      
    
    {\displaystyle \mathbb {z} /m\mathbb {z} }
   or 
  
    
      
        
          z
        
        
          /
        
        m
      
    
    {\displaystyle \mathbb {z} /m}
  , but several elementary texts and application areas use a simplified notation 
  
    
      
        
          
            z
          
          
            m
          
        
      
    
    {\displaystyle \mathbb {z} _{m}}
   when confusion with other algebraic objects is unlikely.
the congruence classes of the integers modulo m were traditionally known as residue classes modulo m, reflecting the fact that all the elements of a congruence class have the same remainder (i.e., "residue") upon being divided by m. any set of m integers selected so that each comes from a different congruence class modulo m is called a complete system of residues modulo m. the division algorithm shows that the set of integers, {0, 1, 2, ..., m − 1}  form a complete system of residues modulo m, known as the least residue system modulo m. in working with arithmetic problems it is sometimes more convenient to work with a complete system of residues and use the language of congruences while at other times the point of view of the congruence classes of the ring 
  
    
      
        
          z
        
        
          /
        
        m
        
          z
        
      
    
    {\displaystyle \mathbb {z} /m\mathbb {z} }
   is more useful.


=== multiplicative group of integers modulo m ===

not every element of a complete residue system modulo m has a modular multiplicative inverse, for instance, zero never does. after removing the elements of a complete residue system that are not relatively prime to m, what is left is called a reduced residue system, all of whose elements have modular multiplicative inverses. the number of elements in a reduced residue system is 
  
    
      
        ϕ
        (
        m
        )
      
    
    {\displaystyle \phi (m)}
  , where 
  
    
      
        ϕ
      
    
    {\displaystyle \phi }
   is the euler totient function, i.e., the number of positive integers less than m that are relatively prime to m.
in a general ring with unity not every element has a multiplicative inverse and those that do are called units. as the product of two units is a unit, the units of a ring form a group, the group of units of the ring and often denoted by r× if r is the name of the ring. the group of units of the ring of integers modulo m is called the multiplicative group of integers modulo m, and it is isomorphic to a reduced residue system. in particular, it has order (size), 
  
    
      
        ϕ
        (
        m
        )
      
    
    {\displaystyle \phi (m)}
  .
in the case that m is a prime, say p, then 
  
    
      
        ϕ
        (
        p
        )
        =
        p
        −
        1
      
    
    {\displaystyle \phi (p)=p-1}
   and all the non-zero elements of 
  
    
      
        
          z
        
        
          /
        
        p
        
          z
        
      
    
    {\displaystyle \mathbb {z} /p\mathbb {z} }
   have multiplicative inverses, thus 
  
    
      
        
          z
        
        
          /
        
        p
        
          z
        
      
    
    {\displaystyle \mathbb {z} /p\mathbb {z} }
   is a finite field. in this case, the multiplicative group of integers modulo p form a cyclic group of order p − 1.


== example ==
for any integer 
  
    
      
        n
        >
        1
      
    
    {\displaystyle n>1}
  , it's always the case that 
  
    
      
        
          n
          
            2
          
        
        −
        n
        +
        1
      
    
    {\displaystyle n^{2}-n+1}
   is the modular multiplicative inverse of 
  
    
      
        n
        +
        1
      
    
    {\displaystyle n+1}
   with respect to the modulus 
  
    
      
        
          n
          
            2
          
        
      
    
    {\displaystyle n^{2}}
  , since 
  
    
      
        (
        n
        +
        1
        )
        (
        
          n
          
            2
          
        
        −
        n
        +
        1
        )
        =
        
          n
          
            3
          
        
        +
        1
      
    
    {\displaystyle (n+1)(n^{2}-n+1)=n^{3}+1}
  . examples are 
  
    
      
        3
        ×
        3
        ≡
        1
        
          
          (
          mod
          
          4
          )
        
      
    
    {\displaystyle 3\times 3\equiv 1{\pmod {4}}}
  , 
  
    
      
        4
        ×
        7
        ≡
        1
        
          
          (
          mod
          
          9
          )
        
      
    
    {\displaystyle 4\times 7\equiv 1{\pmod {9}}}
  , 
  
    
      
        5
        ×
        13
        ≡
        1
        
          
          (
          mod
          
          16
          )
        
      
    
    {\displaystyle 5\times 13\equiv 1{\pmod {16}}}
   and so on.
the following example uses the modulus 10: two integers are congruent mod 10 if and only if their difference is divisible by 10, for instance

  
    
      
        32
        ≡
        2
        
          
          (
          mod
          
          10
          )
        
      
    
    {\displaystyle 32\equiv 2{\pmod {10}}}
   since 10 divides 32 − 2 = 30, and

  
    
      
        111
        ≡
        1
        
          
          (
          mod
          
          10
          )
        
      
    
    {\displaystyle 111\equiv 1{\pmod {10}}}
   since 10 divides 111 − 1 = 110.some of the ten congruence classes with respect to this modulus are:

  
    
      
        
          
            0
            ¯
          
        
        =
        {
        ⋯
        ,
        −
        20
        ,
        −
        10
        ,
        0
        ,
        10
        ,
        20
        ,
        ⋯
        }
      
    
    {\displaystyle {\overline {0}}=\{\cdots ,-20,-10,0,10,20,\cdots \}}
  

  
    
      
        
          
            1
            ¯
          
        
        =
        {
        ⋯
        ,
        −
        19
        ,
        −
        9
        ,
        1
        ,
        11
        ,
        21
        ,
        ⋯
        }
      
    
    {\displaystyle {\overline {1}}=\{\cdots ,-19,-9,1,11,21,\cdots \}}
  

  
    
      
        
          
            5
            ¯
          
        
        =
        {
        ⋯
        ,
        −
        15
        ,
        −
        5
        ,
        5
        ,
        15
        ,
        25
        ,
        ⋯
        }
      
    
    {\displaystyle {\overline {5}}=\{\cdots ,-15,-5,5,15,25,\cdots \}}
   and

  
    
      
        
          
            9
            ¯
          
        
        =
        {
        ⋯
        ,
        −
        11
        ,
        −
        1
        ,
        9
        ,
        19
        ,
        29
        ,
        ⋯
        }
        .
      
    
    {\displaystyle {\overline {9}}=\{\cdots ,-11,-1,9,19,29,\cdots \}.}
  the linear congruence 4x ≡ 5 (mod 10) has no solutions since the integers that are congruent to 5 (i.e., those in 
  
    
      
        
          
            5
            ¯
          
        
      
    
    {\displaystyle {\overline {5}}}
  ) are all odd while 4x is always even. however, the linear congruence 4x ≡ 6 (mod 10) has two solutions, namely, x = 4 and x = 9. the gcd(4, 10) = 2 and 2 does not divide 5, but does divide 6.
since gcd(3, 10) = 1, the linear congruence 3x ≡ 1 (mod 10) will have solutions, that is, modular multiplicative inverses of 3 modulo 10 will exist. in fact, 7 satisfies this congruence (i.e., 21 − 1 = 20). however, other integers also satisfy the congruence, for instance 17 and −3 (i.e., 3(17) − 1 = 50 and 3(−3) − 1 = −10). in particular, every integer in 
  
    
      
        
          
            7
            ¯
          
        
      
    
    {\displaystyle {\overline {7}}}
   will satisfy the congruence since these integers have the form 7 + 10r for some integer r and 

  
    
      
        3
        (
        7
        +
        10
        r
        )
        −
        1
        =
        21
        +
        30
        r
        −
        1
        =
        20
        +
        30
        r
        =
        10
        (
        2
        +
        3
        r
        )
        ,
      
    
    {\displaystyle 3(7+10r)-1=21+30r-1=20+30r=10(2+3r),}
  is divisible by 10. this congruence has only this one congruence class of solutions. the solution in this case could have been obtained by checking all possible cases, but systematic algorithms would be needed for larger moduli and these will be given in the next section. 
the product of congruence classes 
  
    
      
        
          
            5
            ¯
          
        
      
    
    {\displaystyle {\overline {5}}}
   and 
  
    
      
        
          
            8
            ¯
          
        
      
    
    {\displaystyle {\overline {8}}}
   can be obtained by selecting an element of 
  
    
      
        
          
            5
            ¯
          
        
      
    
    {\displaystyle {\overline {5}}}
  , say 25, and an element of 
  
    
      
        
          
            8
            ¯
          
        
      
    
    {\displaystyle {\overline {8}}}
  , say −2, and observing that their product (25)(−2) = −50 is in the congruence class 
  
    
      
        
          
            0
            ¯
          
        
      
    
    {\displaystyle {\overline {0}}}
  . thus, 
  
    
      
        
          
            5
            ¯
          
        
        
          ⋅
          
            10
          
        
        
          
            8
            ¯
          
        
        =
        
          
            0
            ¯
          
        
      
    
    {\displaystyle {\overline {5}}\cdot _{10}{\overline {8}}={\overline {0}}}
  . addition is defined in a similar way. the ten congruence classes together with these operations of addition and multiplication of congruence classes form the ring of integers modulo 10, i.e., 
  
    
      
        
          z
        
        
          /
        
        10
        
          z
        
      
    
    {\displaystyle \mathbb {z} /10\mathbb {z} }
  .
a complete residue system modulo 10 can be the set {10, −9, 2, 13, 24, −15, 26, 37, 8, 9} where each integer is in a different congruence class modulo 10. the unique least residue system modulo 10 is {0, 1, 2, ..., 9}. a reduced residue system modulo 10 could be {1, 3, 7, 9}. the product of any two congruence classes represented by these numbers is again one of these four congruence classes. this implies that these four congruence classes form a group, in this case the cyclic group of order four, having either 3 or 7 as a (multiplicative) generator. the represented congruence classes form the group of units of the ring 
  
    
      
        
          z
        
        
          /
        
        10
        
          z
        
      
    
    {\displaystyle \mathbb {z} /10\mathbb {z} }
  . these congruence classes are precisely the ones which have modular multiplicative inverses.


== computation ==


=== extended euclidean algorithm ===

a modular multiplicative inverse of a modulo m can be found by using the extended euclidean algorithm.
the euclidean algorithm determines the greatest common divisor (gcd) of two integers, say a and m. if a has a multiplicative inverse modulo m, this gcd must be 1. the last of several equations produced by the algorithm may be solved for this gcd. then, using a method called "back substitution", an expression connecting the original parameters and this gcd can be obtained. in other words, integers x and y can be found to satisfy bézout's identity,

  
    
      
        a
        x
        +
        m
        y
        =
        gcd
        (
        a
        ,
        m
        )
        =
        1.
      
    
    {\displaystyle ax+my=\gcd(a,m)=1.}
  rewritten, this is

  
    
      
        a
        x
        −
        1
        =
        (
        −
        y
        )
        m
        ,
      
    
    {\displaystyle ax-1=(-y)m,}
  that is,

  
    
      
        a
        x
        ≡
        1
        
          
          (
          mod
          
          m
          )
        
        ,
      
    
    {\displaystyle ax\equiv 1{\pmod {m}},}
  so, a modular multiplicative inverse of a has been calculated. a more efficient version of the algorithm is the extended euclidean algorithm, which, by using auxiliary equations, reduces two passes through the algorithm (back substitution can be thought of as passing through the algorithm in reverse) to just one.
in big o notation, this algorithm runs in time o(log2(m)), assuming |a| < m, and is considered to be very fast and generally more efficient than its alternative, exponentiation.


=== using euler's theorem ===
as an alternative to the extended euclidean algorithm, euler's theorem may be used to compute modular inverses.according to euler's theorem, if a is coprime to m, that is, gcd(a, m) = 1, then

  
    
      
        
          a
          
            ϕ
            (
            m
            )
          
        
        ≡
        1
        
          
          (
          mod
          
          m
          )
        
        ,
      
    
    {\displaystyle a^{\phi (m)}\equiv 1{\pmod {m}},}
  where 
  
    
      
        ϕ
      
    
    {\displaystyle \phi }
   is euler's totient function. this follows from the fact that a belongs to the multiplicative group 
  
    
      
        (
        
          z
        
        
          /
        
        m
        
          z
        
        )
      
    
    {\displaystyle (\mathbb {z} /m\mathbb {z} )}
  × if and only if a is coprime to m. therefore, a modular multiplicative inverse can be found directly:

  
    
      
        
          a
          
            ϕ
            (
            m
            )
            −
            1
          
        
        ≡
        
          a
          
            −
            1
          
        
        
          
          (
          mod
          
          m
          )
        
        .
      
    
    {\displaystyle a^{\phi (m)-1}\equiv a^{-1}{\pmod {m}}.}
  in the special case where m is a prime, 
  
    
      
        ϕ
        (
        m
        )
        =
        m
        −
        1
      
    
    {\displaystyle \phi (m)=m-1}
   and a modular inverse is given by 

  
    
      
        
          a
          
            −
            1
          
        
        ≡
        
          a
          
            m
            −
            2
          
        
        
          
          (
          mod
          
          m
          )
        
        .
      
    
    {\displaystyle a^{-1}\equiv a^{m-2}{\pmod {m}}.}
  this method is generally slower than the extended euclidean algorithm, but is sometimes used when an implementation for modular exponentiation is already available. some disadvantages of this method include:

the value 
  
    
      
        ϕ
        (
        m
        )
      
    
    {\displaystyle \phi (m)}
   must be known and the most efficient known computation requires m's factorization. factorization is widely believed to be a computationally hard problem.  however, calculating 
  
    
      
        ϕ
        (
        m
        )
      
    
    {\displaystyle \phi (m)}
   is straightforward when the prime factorization of m is known.
the relative cost of exponentiation. though it can be implemented more efficiently using modular exponentiation, when large values of m are involved this is most efficiently computed with the montgomery reduction method. this algorithm itself requires a modular inverse mod m, which is what was to be calculated in the first place. without the montgomery method, the standard binary exponentiation, which requires division mod m at every step, is a slow operation when m is large.one notable advantage of this technique is that there are no conditional branches which depend on the value of a, and thus the value of a, which may be an important secret in public-key cryptography, can be protected from side-channel attacks.  for this reason, the standard implementation of curve25519 uses this technique to compute an inverse.


=== multiple inverses ===
it is possible to compute the inverse of multiple numbers ai, modulo a common m, with a single invocation of the euclidean algorithm and three multiplications per additional input.  the basic idea is to form the product of all the ai, invert that, then multiply by aj for all j ≠ i to leave only the desired a−1i.
more specifically, the algorithm is (all arithmetic performed modulo m):

compute the prefix products 
  
    
      
        
          b
          
            i
          
        
        =
        
          ∏
          
            j
            =
            1
          
          
            i
          
        
        
          a
          
            j
          
        
        =
        
          a
          
            i
          
        
        
          b
          
            i
            −
            1
          
        
      
    
    {\textstyle b_{i}=\prod _{j=1}^{i}a_{j}=a_{i}b_{i-1}}
   for all i ≤ n.
compute b−1n using any available algorithm.
for i from n down to 2, compute
a−1i = b−1ibi−1 and
b−1i−1 = b−1iai.
finally, a−11 = b−11.it is possible to perform the multiplications in a tree structure rather than linearly to exploit parallel computing.


== applications ==
finding a modular multiplicative inverse has many applications in algorithms that rely on the theory of modular arithmetic. for instance, in cryptography the use of modular arithmetic permits some operations to be carried out more quickly and with fewer storage requirements, while other operations become more difficult. both of these features can be used to advantage. in particular, in the rsa algorithm, encrypting and decrypting a message is done using a pair of numbers that are multiplicative inverses with respect to a carefully selected modulus. one of these numbers is made public and can be used in a rapid encryption procedure, while the other, used in the decryption procedure, is kept hidden. determining the hidden number from the public number is considered to be computationally infeasible and this is what makes the system work to ensure privacy.as another example in a different context, consider the exact division problem in computer science where you have a list of odd word-sized numbers each divisible by k and you wish to divide them all by k. one solution is as follows:

use the extended euclidean algorithm to compute k−1, the modular multiplicative inverse of k mod 2w, where w is the number of bits in a word. this inverse will exist since the numbers are odd and the modulus has no odd factors.
for each number in the list, multiply it by k−1 and take the least significant word of the result.on many machines, particularly those without hardware support for division, division is a slower operation than multiplication, so this approach can yield a considerable speedup. the first step is relatively slow but only needs to be done once.
modular multiplicative inverses are used to obtain a solution of a system of linear congruences that is guaranteed by the chinese remainder theorem. 
for example, the system

x ≡ 4  (mod 5)
x ≡ 4  (mod 7)
x ≡ 6  (mod 11)has common solutions since 5,7 and 11 are pairwise coprime. a solution is given by

x = t1 (7 × 11) × 4 + t2 (5 × 11) × 4 + t3 (5 × 7) × 6where

t1 = 3 is the modular multiplicative inverse of 7 × 11 (mod 5),
t2 = 6 is the modular multiplicative inverse of 5 × 11 (mod 7) and
t3 = 6 is the modular multiplicative inverse of 5 × 7 (mod 11).thus,

x = 3 × (7 × 11) × 4 + 6 × (5 × 11) × 4 + 6 × (5 × 7) × 6 = 3504and in its unique reduced form

x ≡ 3504 ≡ 39 (mod 385)since 385 is the lcm of 5,7 and 11.
also, the modular multiplicative inverse figures prominently in the definition of the kloosterman sum.


== see also ==
inversive congruential generator - a pseudo-random number generator that uses modular multiplicative inverses
rational reconstruction (mathematics)


== notes ==


== references ==
ireland, kenneth; rosen, michael (1990), a classical introduction to modern number theory (2nd ed.), springer-verlag, isbn 0-387-97329-x
rosen, kenneth h. (1993), elementary number theory and its applications (3rd ed.), addison-wesley, isbn 978-0-201-57889-8
schumacher, carol (1996). chapter zero: fundamental notions of abstract mathematics. addison-wesley. isbn 0-201-82653-4.
trappe, wade; washington, lawrence c. (2006), introduction to cryptography with coding theory (2nd ed.), prentice-hall, isbn 978-0-13-186239-5


== external links ==
weisstein, eric w. "modular inverse". mathworld.
guevara vasquez, fernando provides a solved example of solving the modulo multiplicative inverse using euclid's algorithm