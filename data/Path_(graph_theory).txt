in graph theory, a path in a graph is a finite or infinite sequence of edges which joins a sequence of vertices which, by most definitions, are all distinct (and since the vertices are distinct, so are the edges). a directed path (sometimes called dipath) in a directed graph is a finite or infinite sequence of edges which joins a sequence of distinct vertices, but with the added restriction that the edges be all directed in the same direction.
paths are fundamental concepts of graph theory, described in the introductory sections of most graph theory texts. see e.g. bondy and murty (1976), gibbons (1985), or diestel (2005). korte et al. (1990) cover more advanced algorithmic topics concerning paths in graphs.


== definitions ==


=== walk, trail, and path ===

a walk is a finite or infinite sequence of edges which joins a sequence of vertices.let g = (v, e, ϕ) be a graph. a finite walk is a sequence of edges (e1, e2, …, en − 1) for which there is a sequence of vertices (v1, v2, …, vn) such that ϕ(ei) = {vi, vi + 1} for i = 1, 2, …, n − 1. (v1, v2, …, vn) is the vertex sequence of the walk. the walk is  closed if v1 = vn, and it is open otherwise. an infinite walk is a sequence of edges of the same type described here, but with no first or last vertex, and a semi-infinite walk (or ray) has a first vertex but no last vertex.a trail is a walk in which all edges are distinct.
a path is a trail in which all vertices (and therefore also all edges) are distinct.if w = (e1, e2, …, en − 1) is a finite walk with vertex sequence (v1, v2, …, vn) then w is said to be a walk from v1 to vn. similarly for a trail or a path. if there is a finite walk between two distinct vertices then there is also a finite trail and a finite path between them.
some authors do not require that all vertices of a path be distinct and instead use the term simple path to refer to such a path where all vertices are distinct.
a weighted graph associates a value (weight) with every edge in the graph. the weight of a walk (or trail or path) in a weighted graph is the sum of the weights of the traversed edges. sometimes the words cost or length are used instead of weight.


=== directed walk, directed trail, and directed path ===
a directed walk is a finite or infinite sequence of edges directed in the same direction which joins a sequence of vertices.let g = (v, e, ϕ) be a directed graph. a finite directed walk is a sequence of edges (e1, e2, …, en − 1) for which there is a sequence of vertices (v1, v2, …, vn) such that ϕ(ei) = (vi, vi + 1) for i = 1, 2, …, n − 1. (v1, v2, …, vn) is the vertex sequence of the directed walk. the directed walk is  closed if v1 = vn, and it is open otherwise. an infinite directed walk is a sequence of edges of the same type described here, but with no first or last vertex, and a semi-infinite directed walk (or ray) has a first vertex but no last vertex.a directed trail is a directed walk in which all edges are distinct.
a directed path is a directed trail in which all vertices are distinct.if w = (e1, e2, …, en − 1) is a finite directed walk with vertex sequence (v1, v2, …, vn) then w is said to be a walk from v1 to vn. similarly for a directed trail or a path. if there is a finite directed walk between two distinct vertices then there is also a finite directed trail and a finite directed path between them.
some authors do not require that all vertices of a directed path be distinct and instead use the term simple directed path to refer to such a directed path.
a weighted directed graph associates a value (weight) with every edge in the directed graph. the weight of a directed walk (or trail or path) in a weighted directed graph is the sum of the weights of the traversed edges. sometimes the words cost or length are used instead of weight.


== examples ==
a graph is connected if there are paths containing each pair of vertices.
a directed graph is strongly connected if there are oppositely oriented directed paths containing each pair of vertices.
a path such that no graph edges connect two nonconsecutive path vertices is called an induced path.
a path that includes every vertex of the graph without repeats is known as a hamiltonian path.
two paths are vertex-independent (alternatively, internally vertex-disjoint) if they do not have any internal vertex in common. similarly, two paths are edge-independent (or edge-disjoint) if they do not have any internal edge in common.  two internally vertex-disjoint paths are edge-disjoint, but the converse is not necessarily true.
the distance between two vertices in a graph is the length of a shortest path between them, if one exists, and otherwise the distance is infinity.
the diameter of a connected graph is the largest distance (defined above) between pairs of vertices of the graph.


== finding paths ==
several algorithms exist to find shortest and longest paths in graphs, with the important distinction that the former problem is computationally much easier than the latter.
dijkstra's algorithm produces a list of shortest paths from a source vertex to every other vertex in directed and undirected graphs with non-negative edge weights (or no edge weights), whilst the bellman–ford algorithm can be applied to directed graphs with negative edge weights.  the floyd–warshall algorithm can be used to find the shortest paths between all pairs of vertices in weighted directed graphs.


== see also ==
glossary of graph theory
path graph
polygonal chain
shortest path problem
longest path problem
dijkstra's algorithm
bellman–ford algorithm
floyd–warshall algorithm
self-avoiding walk
shortest-path graph


== references ==

bender, edward a.; williamson, s. gill (2010). lists, decisions and graphs. with an introduction to probability.
bondy, j. a.; murty, u. s. r. (1976). graph theory with applications. north holland. p. 12-21. isbn 0-444-19451-7.
diestel, reinhard (2005). graph theory. springer-verlag. pp. 6–9. isbn 3-540-26182-6.
gibbons, a. (1985). algorithmic graph theory. cambridge university press. pp. 5–6. isbn 0-521-28881-9.
korte, bernhard; lovász, lászló; prömel, hans jürgen; schrijver, alexander (1990). paths, flows, and vlsi-layout. springer-verlag. isbn 0-387-52685-4.